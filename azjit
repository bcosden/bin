#!/bin/bash

BLACK="\033[30m"
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
PINK="\033[35m"
CYAN="\033[36m"
WHITE="\033[37m"
NORMAL="\033[0;39m"

if [ -z "$1" ]; then
    echo ""
    echo "----------------------------------------------------------------------------------------------------------"
    echo " Azure Just in Time Access"
    echo ""
    echo " Microsoft policy automatically creates NSG's to block inbound access to Virtual Machines. Use this tool "
    echo " to set a just in time access policy for a vm and open the ports for a period of time for testing.       "
    echo ""
    echo " usage:"
    echo ""
    echo " azjit <rg>                                       - list effective policies for a resourcegroup"
    echo " azjit <rg> -a <vmname> <port1,port2,port3...>    - add a port policy to a vm, default 24h, any source"
    echo " azjit <rg> <vmname> (duration)                   - open port access to vm, optional duration, default 12h"
    echo "-----------------------------------------------------------------------------------------------------------"
    echo ""
else
    subid=$(az account show --query 'id' -o tsv)
    if [ -z "$2" ]; then
        uri='https://management.azure.com/subscriptions/'$subid'/resourceGroups/'$1'/providers/Microsoft.Security/jitNetworkAccessPolicies?api-version=2020-01-01'
        output=$(az rest --method GET --url $uri)
        len=$(echo $output | jq -r '.value | length')
        echo ""
        echo "Policies"
        for (( i=0; i<$len; i++ ))        
        do
            echo " --------------------------------------------"
            echo $output | jq -r '.value['$i'].properties.virtualMachines[0].ports[] += {"name":.value['$i'].name}' | jq -r '["vm","port","proto","maxdur","sourceaddr"], (.value['$i'].properties.virtualMachines[0].ports[] | [.name,.number,.protocol,.maxRequestAccessDuration,.allowedSourceAddressPrefix]) | @csv' | csvlook -I
            echo " --------------------------------------------"
            echo ""
        done
        echo "Access"
        for (( i=0; i<$len; i++ ))        
        do
	    #enddt=($(echo $output | jq -r '.value['$i'].properties.requests[].virtualMachines[0].ports[].endTimeUtc'))
	    #echo "date: "${enddt[$i]}
            #date -d "${enddt[$i]}" +'%D %r'
            echo " ------------------------------------------------------------"
	    echo $output | jq -r '.value['$i'].properties.requests[].virtualMachines[0].ports[] += {"name":.value['$i'].name}' | jq -r '["vm","port","EndTime","sourceaddr","status"], (.value['$i'].properties.requests[].virtualMachines[0].ports[] | [.name,.number,.endTimeUtc,.allowedSourceAddressPrefix,.status]) | @csv' | csvlook -I
            echo " ------------------------------------------------------------"
            echo ""
        done
    else
        if [ "$2" == "-a" ]; then
            loc=$(az group show -g $1 --query 'location' -o tsv)
            myvar=$4
            ports=(`echo $myvar | tr ',' ' '`)
            uri='https://management.azure.com/subscriptions/'$subid'/resourceGroups/'$1'/providers/Microsoft.Security/locations/'$loc'/jitNetworkAccessPolicies/'$3'?api-version=2020-01-01'
            json='{
            "kind": "Basic",
            "properties": {
                "virtualMachines": [
                {
                    "id": "/subscriptions/'$subid'/resourceGroups/'$1'/providers/Microsoft.Compute/virtualMachines/'$3'",
                    "ports": ['
		            len=${#ports[@]}
                    for (( i=0; i<$len; i++ ))
		            do
                        json+='{
                        "number": "'${ports[$i]}'",
                        "maxRequestAccessDuration": "PT24H",
			"protocol": "*",
                        "allowedSourceAddressPrefix": "*"
                        }'
	                    if [ $i -lt $((len-1)) ]; then
	                        json+=','
		                fi
	                done
                    json+=']                
                    }
                ]
            }
            }'

            az rest --method PUT \
                --url $uri  \
                --body "$json" \
		--output none
        else
	    if [ -z $3 ]; then
                dur=12
	    else
	        dur=$3
	    fi
            loc=$(az group show -g $1 --query 'location' -o tsv)
            ip=$(curl -s -4 ifconfig.io)
	        uri='https://management.azure.com/subscriptions/'$subid'/resourceGroups/'$1'/providers/Microsoft.Security/locations/'$loc'/jitNetworkAccessPolicies/'$2'?api-version=2020-01-01'
            myvar=$(az rest --method GET --url $uri | jq ".properties.virtualMachines[].ports[].number")
            ports=(`echo $myvar`)
            uri='https://management.azure.com/subscriptions/'$subid'/resourceGroups/'$1'/providers/Microsoft.Security/locations/'$loc'/jitNetworkAccessPolicies/'$2'/initiate?api-version=2020-01-01'
            json='{
            "virtualMachines": [
                {
                "id": "/subscriptions/'$subid'/resourceGroups/'$1'/providers/Microsoft.Compute/virtualMachines/'$2'",
                "ports": ['
		        len=${#ports[@]}
                for (( i=0; i<$len; i++ ))
		        do
                    json+='{
                    "number": "'${ports[$i]}'",
                    "duration": "PT'$dur'H",
                    "allowedSourceAddressPrefix": "'$ip'"
                    }'
	                if [ $i -lt $((len-1)) ]; then
	                    json+=','
		            fi
	            done
                json+=']
                }
            ],
            "justification": "GBB doing our thang ....."
            }'
            
            az rest --method POST \
                --url $uri  \
                --body "$json"  \
                --output none
        fi
    fi
fi
